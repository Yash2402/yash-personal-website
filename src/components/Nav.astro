---
import { Image } from "astro:assets";
import { navLinks } from "../data/navLinks";

import yash from "../imgs/yash.svg";
import LM_Menu from "../imgs/LM_menu.svg";
import DM_Menu from "../imgs/DM_menu.svg";
import ThemeIcon from "./ThemeToggle.astro";

import "@fontsource/ibm-plex-sans-hebrew";

interface NavProps {
  current: string;
}

const { current } = Astro.props as NavProps;
---

<header class="flex flex-row itmes-center justify-between bg-LM-Title-Bar dark:bg-DM-Title-Bar px-4 py-3 mx-5 rounded-[15px] md:flex md:flex-row md:items-center md:justify-between md:px-5 md:py-3 md:rounded-[20px] md:mx-20">
  <a class="w-[75px] md:w-[95px]" href="/"><Image src={yash} alt="Personal Logo"/></a>
  <div class="hidden md:flex md:flex-row md:items-center md:space-x-7 xl:flex xl:flex-row xl:items-center xl:space-x-11">
    { navLinks.map((navLink) => ( <li class="list-none"> <a class:list={[
      navLink.title === current ? "text-LM-Nav-Selected dark:text-DM-Nav-Selected" : "text-LM-Nav-Unselected dark:text-DM-Nav-Unselected",
      "hover:text-LM-Nav-Selected dark:hover:text-DM-Nav-Selected",
      "font-title text-[18px]"
    ]} href={navLink.href}> {navLink.title} </a> </li> )) }
    <ThemeIcon/>
  </div>
  <div class="flex flex-row items-center space-x-6 md:hidden">
    <ThemeIcon/>
    <div class="relative inline-block">
      <div>
        <button type="button" class="w-full justify-center" id="menu-button" aria-expanded="true" aria-haspopup="true">
          <Image class="dark:hidden h-[14px]" src={LM_Menu} alt="Menu"/> 
          <Image class="dark:block dark:h-[14px] hidden" src={DM_Menu} alt="Menu"/>
        </button>
      </div>
      <div class="dropdown-menu absolute right-[-12px] z-10 mt-5 w-52 rounded-md bg-LM-Title-Bar dark:bg-DM-Title-Bar shadow-2xl border border-LM-Secondary dark:border-DM-Secondary focus:outline-none" role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1">
        <div class="flex flex-col justify-center items-center my-10 space-y-10" role="none">
            { navLinks.map((navLink) => ( <li class="list-none"> <a class:list={[
              navLink.title === current ? "text-LM-Nav-Selected dark:text-DM-Nav-Selected" : "text-LM-Nav-Unselected dark:text-DM-Nav-Unselected",
              "hover:text-LM-Nav-Selected dark:hover:text-DM-Nav-Selected",
              "font-title text-[18px]"
            ]} href={navLink.href}> {navLink.title} </a> </li> )) }
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const menuButton = document.getElementById("menu-button");
    const dropdownMenu = document.querySelector(".dropdown-menu");

    // Toggle dropdown menu visibility when the button is clicked
    menuButton && menuButton.addEventListener("click", function() {
      (dropdownMenu && dropdownMenu.classList.toggle("hidden"));
    });

    // Close dropdown menu when clicking outside of it
    // document.addEventListener("click", function(event) {
    //   if (!(menuButton && menuButton.contains(event)) && !(dropdownMenu && dropdownMenu.contains(event))) {
    //     (dropdownMenu && dropdownMenu.classList.add("hidden"));
    //   }
    // });
  });
</script>

<style>
  li a {
    font-style: normal;
    font-weight: 500;
    line-height: normal;
    letter-spacing: -1.05px;
  }
</style>
